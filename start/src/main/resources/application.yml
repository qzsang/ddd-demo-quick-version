# Tomcat
server:
  port: 8080
  servlet:
    context-path: /ddd

spring:
  datasource:
    druid:
      one:
        url: jdbc:mysql://127.0.0.1:3306/my_test?useUnicode=true&characterEncoding=utf-8&useSSL=true
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: 123456
        initial-size: 10
        max-active: 100
        min-idle: 10
        max-wait: 50000 # 配置获取连接等待超时的时间
        time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        min-evictable-idle-time-millis: 60000 # 配置一个连接在池中最小生存的时间，单位是毫秒-
        validation-query: SELECT 1 # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
        test-on-borrow: false # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        test-on-return: false # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        test-while-idle: true # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        pool-prepared-statements: false  # 20 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
        max-open-prepared-statements: -1 # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
        remove-abandoned: false #打开removeAbandoned功能
        remove-abandoned-timeout: 1800 #1800秒，也就是30分钟
        log-abandoned: true #关闭abanded连接时输出错误日志
        async-init: true # 异步初始化  程序启动会变快
        keep-alive: true # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
        filters: mergeStat,slf4j
        use-global-data-source-stat: true
        connection-properties: druid.stat.slowSqlMillis=5000
